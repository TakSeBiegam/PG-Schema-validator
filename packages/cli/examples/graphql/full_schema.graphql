type Post {
  name: String!
  content: String!
  createdAt: String!
  comments: Comment!
}

type Comment {
  title: String!
  isLiked: Likes!
}

type Likes {
  liked: Boolean!
  loved: Boolean!
}

type Query {
  publicQuery: PublicQuery
  userQuery: UserQuery
}

type PublicQuery {
  version: String!
}

type User {
  username: String! @constraint(format: "^[0-9a-zA-Z]*$")
  nickname: String! @constraint(maxLength: 2137)
  sex: SEX
  friends: [String!]!
  payments: AccountType!
}

union AccountType = Company | Personal

type Company {
  title: String!
  NIP: String!
}

type Personal {
  firstName: String!
  lastName: String!
}

type UserQuery {
  me: User!
  getPost(id: String!): Post!
}

enum SEX {
  M
  F
}

schema {
  query: Query
}
